
''' Problem 002: 
    Each new term in the Fibonacci sequence is generated by 
    adding the previous two terms. By starting with 1 and 2, 
    the first 10 terms will be:
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89,...
    By considering the terms in the Fibonacci sequence whose 
    values do not exceed four million,  find the sum of the even-valued terms. '''

def solution(n) -> int:
    n = int(n)
    fib_term_a = 0
    fib_term_b = 2
    sumEven = 0
    
    # A recurrence relation exists for even Fibonacci numbers E(n).
    # E(n) = 4E(n - 1) + E(n - 2)
    while fib_term_b < n:
        sumEven += fib_term_b
        fib_term_a, fib_term_b = fib_term_b, 4 * fib_term_b + fib_term_a
    
    return sumEven

def main():
    n = input("Type an integer:")
    print(f"Sum of even Fibonacci terms not exceeding {n} is {solution(n)}")
    
if __name__ == "__main__":
    main()
    
# Solved 17th July 2025.